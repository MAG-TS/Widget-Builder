[{"D:\\Main school folder\\BA Project\\Code\\Widget-Builder-development\\client\\src\\index.js":"1","D:\\Main school folder\\BA Project\\Code\\Widget-Builder-development\\client\\src\\reportWebVitals.js":"2","D:\\Main school folder\\BA Project\\Code\\Widget-Builder-development\\client\\src\\App.js":"3","D:\\Main school folder\\BA Project\\Code\\Widget-Builder-development\\client\\src\\dashboard\\pages\\Dashboard.js":"4","D:\\Main school folder\\BA Project\\Code\\Widget-Builder-development\\client\\src\\widget-builder\\pages\\WidgetBuilder.js":"5","D:\\Main school folder\\BA Project\\Code\\Widget-Builder-development\\client\\src\\departments\\pages\\Departments.js":"6","D:\\Main school folder\\BA Project\\Code\\Widget-Builder-development\\client\\src\\settings\\pages\\Settings.js":"7","D:\\Main school folder\\BA Project\\Code\\Widget-Builder-development\\client\\src\\co-workers\\pages\\CoWorkers.js":"8","D:\\Main school folder\\BA Project\\Code\\Widget-Builder-development\\client\\src\\shared\\components\\Header.js":"9","D:\\Main school folder\\BA Project\\Code\\Widget-Builder-development\\client\\src\\shared\\components\\SideNav.js":"10","D:\\Main school folder\\BA Project\\Code\\Widget-Builder-development\\client\\src\\register\\pages\\RegisterTwo.js":"11","D:\\Main school folder\\BA Project\\Code\\Widget-Builder-development\\client\\src\\shared\\context\\authContext.js":"12","D:\\Main school folder\\BA Project\\Code\\Widget-Builder-development\\client\\src\\register\\pages\\Register.js":"13","D:\\Main school folder\\BA Project\\Code\\Widget-Builder-development\\client\\src\\login\\pages\\Login.js":"14","D:\\Main school folder\\BA Project\\Code\\Widget-Builder-development\\client\\src\\shared\\svgs\\MondaySvg.js":"15","D:\\Main school folder\\BA Project\\Code\\Widget-Builder-development\\client\\src\\shared\\svgs\\JiraSvg.js":"16","D:\\Main school folder\\BA Project\\Code\\Widget-Builder-development\\client\\src\\shared\\svgs\\WidgetBuilderSvg.js":"17","D:\\Main school folder\\BA Project\\Code\\Widget-Builder-development\\client\\src\\widget-builder\\components\\HeadingLarge.js":"18","D:\\Main school folder\\BA Project\\Code\\Widget-Builder-development\\client\\src\\widget-builder\\components\\HeadingSmall.js":"19","D:\\Main school folder\\BA Project\\Code\\Widget-Builder-development\\client\\src\\widget-builder\\components\\HeadingMedium.js":"20","D:\\Main school folder\\BA Project\\Code\\Widget-Builder-development\\client\\src\\widget-builder\\components\\Paragraph.js":"21","D:\\Main school folder\\BA Project\\Code\\Widget-Builder-development\\client\\src\\widget-builder\\components\\Link.js":"22","D:\\Main school folder\\BA Project\\Code\\Widget-Builder-development\\client\\src\\shared\\components\\popup\\Popup.js":"23"},{"size":612,"mtime":1609879043876,"results":"24","hashOfConfig":"25"},{"size":362,"mtime":1609667750000,"results":"26","hashOfConfig":"25"},{"size":3914,"mtime":1611067694422,"results":"27","hashOfConfig":"25"},{"size":1868,"mtime":1611067694423,"results":"28","hashOfConfig":"25"},{"size":15230,"mtime":1611343915252,"results":"29","hashOfConfig":"25"},{"size":6616,"mtime":1610993351156,"results":"30","hashOfConfig":"25"},{"size":4369,"mtime":1610993351181,"results":"31","hashOfConfig":"25"},{"size":7272,"mtime":1611067694422,"results":"32","hashOfConfig":"25"},{"size":5184,"mtime":1611070928486,"results":"33","hashOfConfig":"25"},{"size":3905,"mtime":1609879043894,"results":"34","hashOfConfig":"25"},{"size":5334,"mtime":1611067694424,"results":"35","hashOfConfig":"25"},{"size":204,"mtime":1610528736139,"results":"36","hashOfConfig":"25"},{"size":3361,"mtime":1611067694424,"results":"37","hashOfConfig":"25"},{"size":3044,"mtime":1611004303557,"results":"38","hashOfConfig":"25"},{"size":35438,"mtime":1609879043900,"results":"39","hashOfConfig":"25"},{"size":20408,"mtime":1609879043898,"results":"40","hashOfConfig":"25"},{"size":1159,"mtime":1609879043903,"results":"41","hashOfConfig":"25"},{"size":714,"mtime":1611332259439,"results":"42","hashOfConfig":"25"},{"size":710,"mtime":1611332838638,"results":"43","hashOfConfig":"25"},{"size":714,"mtime":1611332284236,"results":"44","hashOfConfig":"25"},{"size":655,"mtime":1611343875344,"results":"45","hashOfConfig":"25"},{"size":669,"mtime":1611332787265,"results":"46","hashOfConfig":"25"},{"size":891,"mtime":1611067694426,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"1ff1xbw",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"50"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"50"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"50"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"50"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"50"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"50"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"50"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"50"},"D:\\Main school folder\\BA Project\\Code\\Widget-Builder-development\\client\\src\\index.js",[],["103","104"],"D:\\Main school folder\\BA Project\\Code\\Widget-Builder-development\\client\\src\\reportWebVitals.js",[],"D:\\Main school folder\\BA Project\\Code\\Widget-Builder-development\\client\\src\\App.js",["105"],"import React, { useState, useCallback, useEffect } from \"react\";\r\nimport {\r\n  Switch,\r\n  Route,\r\n  useLocation,\r\n  Redirect,\r\n  useHistory\r\n} from \"react-router-dom\";\r\n\r\nimport Header from \"./shared/components/Header\";\r\nimport SideNav from './shared/components/SideNav';\r\nimport Dashboard from './dashboard/pages/Dashboard';\r\nimport WidgetBuilder from './widget-builder/pages/WidgetBuilder';\r\nimport Departments from './departments/pages/Departments';\r\nimport CoWorkers from './co-workers/pages/CoWorkers';\r\nimport Settings from './settings/pages/Settings';\r\nimport Register from './register/pages/Register';\r\nimport RegisterTwo from './register/pages/RegisterTwo';\r\nimport Login from './login/pages/Login';\r\nimport 'rsuite/dist/styles/rsuite-default.css';\r\nimport './app.scss';\r\n\r\nimport { AuthContext } from './shared/context/authContext';\r\n\r\nimport Axios from 'axios';\r\n\r\nconst App = props => {\r\n  const [loggedIn, setLoggedIn ] = useState(false);\r\n  const [currUser, setCurrUser] = useState(null);\r\n  const location = useLocation();\r\n  const history = useHistory();\r\n\r\n  // Login\r\n  const login = useCallback((user) => {\r\n    setLoggedIn(true);\r\n    setCurrUser(user);\r\n  }, []);\r\n \r\n  // Logout\r\n  const logout = () => {\r\n    setLoggedIn(false);\r\n    setCurrUser(null);\r\n    history.push('/login');\r\n  }\r\n\r\n  // Get the current user\r\n  const getCurrentUser = () => {\r\n     Axios({\r\n      method: \"GET\",\r\n      withCredentials: true,\r\n      url: \"/users/user\",\r\n      })\r\n      .then((user) => {\r\n        if(user.data.email){\r\n          console.log(user.data);\r\n          login(user.data);\r\n          if(user.data.jiraId === null){\r\n                    history.push('/register-step-two');\r\n                } else {\r\n                    history.push('/');\r\n                }\r\n          //return true;\r\n        }else {\r\n          logout(false);\r\n          return false;\r\n         \r\n        }\r\n      })\r\n      .catch(err => {\r\n      console.log(err);\r\n      return true;\r\n    });\r\n  };\r\n\r\n\r\n\r\n // Get current user's status\r\n async function status() {\r\n  let status = false;\r\n\r\n  return (loggedIn === false && currUser === null) ? status = await getCurrentUser() :\r\n            (loggedIn === undefined) ? status = false :\r\n              (loggedIn === true) ? status = true :\r\n                status\r\n}\r\n\r\n  // Authorization\r\n  const PrivateRoute = ({ component: Component, ...rest }) => (\r\n    <Route {...rest} render={(props) => (\r\n      status() ? <Component {...props} /> : <Redirect to=\"/login\" />\r\n    )} />\r\n  );\r\n  \r\n  \r\n\r\n  let route;\r\n\r\n  if (location.pathname === \"/login\" || location.pathname === \"/register\" || location.pathname === \"/register-step-two\") {\r\n    route = (\r\n      <React.Fragment>\r\n        <Route path=\"/login\" component={ Login }/>\r\n        <Route path=\"/register\" component={ Register }/>\r\n        <Route path=\"/register-step-two\" component={ RegisterTwo }/>\r\n      </React.Fragment>\r\n    );\r\n        \r\n      } else {  \r\n      route = (\r\n        <React.Fragment>\r\n          <div className=\"main-container\">\r\n          <SideNav className=\"side-nav\"></SideNav>\r\n            <div className=\"main\">\r\n              <Header></Header>\r\n              <Switch>\r\n                <PrivateRoute path=\"/\" exact component={ Dashboard }/>\r\n                <PrivateRoute path=\"/widget-builder\" component={ WidgetBuilder }/>\r\n                <PrivateRoute path=\"/departments\" component={ Departments }/>\r\n                <Route path=\"/co-workers\" component={ CoWorkers }/>\r\n                <Route path=\"/settings\" component={ Settings }/>\r\n              </Switch>    \r\n            </div>\r\n          </div>\r\n        </React.Fragment>\r\n      )\r\n    }\r\n  \r\n\r\n  return (\r\n    <AuthContext.Provider value={{loggedIn: loggedIn, login: login, logout: logout, currUser: currUser}}>\r\n      <React.Fragment>\r\n        { route }\r\n    </React.Fragment>\r\n    </AuthContext.Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","D:\\Main school folder\\BA Project\\Code\\Widget-Builder-development\\client\\src\\dashboard\\pages\\Dashboard.js",["106","107","108","109","110","111","112"],"import React, { useState, useContext, useEffect } from 'react';\r\nimport { useHistory, Redirect } from \"react-router-dom\";\r\nimport { Button, Grid, Row, Col, FlexboxGrid, Container } from 'rsuite';\r\nimport Axios from 'axios';\r\n\r\nimport { AuthContext } from '../../shared/context/authContext';\r\n\r\nconst Dashboard = () => {\r\n\r\n        \r\n\r\n\r\n    return (\r\n        <Container className=\"container\">\r\n            <FlexboxGrid justify=\"space-between\" align=\"top\">\r\n                <FlexboxGrid.Item colspan={18}>\r\n                    <h3>My Dashboard</h3>\r\n                </FlexboxGrid.Item>\r\n                <FlexboxGrid.Item colspan={6} >\r\n                    <FlexboxGrid justify=\"end\">\r\n                        <Button color=\"orange button-shadow\" appearance=\"primary\" >Edit Dashboard</Button>\r\n                    </FlexboxGrid>\r\n                </FlexboxGrid.Item>\r\n            </FlexboxGrid>\r\n            <div>\r\n            <Grid fluid>\r\n                <Row gutter={16}>\r\n                    <Col lg={12}>\r\n                        <div className=\"card\">\r\n                            <h1>Widget Card</h1>\r\n                        </div>\r\n                    </Col>\r\n                    <Col lg={8}>\r\n                        <div className=\"card\">\r\n                            <h1>Widget Card</h1>\r\n                        </div>\r\n                    </Col>\r\n                    <Col lg={4}>\r\n                        <div className=\"card\">\r\n                            <h1>Widget Card</h1>\r\n                        </div>\r\n                    </Col>\r\n                    <Col lg={4}>\r\n                        <div className=\"card\">\r\n                            <h1>Widget Card</h1>\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n            </Grid>\r\n            </div>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Dashboard;\r\n","D:\\Main school folder\\BA Project\\Code\\Widget-Builder-development\\client\\src\\widget-builder\\pages\\WidgetBuilder.js",["113","114","115","116","117","118","119","120"],"D:\\Main school folder\\BA Project\\Code\\Widget-Builder-development\\client\\src\\departments\\pages\\Departments.js",["121","122","123","124"],"import React, { useState } from 'react'\r\nimport { Table, FlexboxGrid, Progress, Tag, Input, InputGroup, Icon, Button, Avatar, Container } from 'rsuite';\r\n\r\n\r\nconst ProgressCell = ({ rowData, dataKey, ...props }) => (\r\n    <Table.Cell placement=\"start\" {...props} style={{ padding: 0, height: '100%' }}>\r\n        <FlexboxGrid align=\"center\" style={{ padding: 0, height: '100%', marginRight: '36px'}}>\r\n            <Progress.Line percent={rowData[dataKey]} strokeColor=\"#ffc107\" />\r\n        </FlexboxGrid>\r\n    </Table.Cell>\r\n);\r\nconst MembersCell = ({ rowData, dataKey, ...props }) => (\r\n    \r\n    <Table.Cell placement=\"center\" {...props} style={{ padding: 0, height: '100%' }}>\r\n        <FlexboxGrid align=\"start\" style={{ padding: '10px', height: '100%' }}>\r\n            <div className=\"avatar-group\">\r\n                 {\r\n                rowData.members.map(member => \r\n                    <Avatar size=\"sm\" className=\"avatar-margin avatar-color\">{member}</Avatar>\r\n                )\r\n            }\r\n            \r\n            </div>\r\n        </FlexboxGrid>\r\n    </Table.Cell>\r\n);\r\n\r\n\r\nexport default function Departments() {\r\n\r\n\r\n    const fakeData =[\r\n                    {\"departmentName\": 'Front-end Development', \"members\": [\"MA\", \"TS\", \"GM\"], \"currentGoal\": \"Some task for front-end\", 'workload': 175},\r\n                    {\"departmentName\": 'Front-end Development', \"members\": [\"MA\", \"TS\", \"GM\"], \"currentGoal\": \"Some task for front-end\", 'workload': 75},\r\n                    {\"departmentName\": 'Front-end Development', \"members\": [\"MA\", \"TS\", \"GM\"], \"currentGoal\": \"Some task for front-end\", 'workload': 75},\r\n                    {\"departmentName\": 'Front-end Development', \"members\": [\"MA\", \"TS\", \"GM\"], \"currentGoal\": \"Some task for front-end\", 'workload': 85},\r\n                    {\"departmentName\": 'Front-end Development', \"members\": [\"MA\", \"TS\", \"GM\"], \"currentGoal\": \"Some task for front-end\", 'workload': 25},\r\n                    {\"departmentName\": 'Front-end Development', \"members\": [\"MA\", \"TS\", \"GM\"], \"currentGoal\": \"Some task for front-end\", 'workload': 0},\r\n                    {\"departmentName\": 'Front-end Development', \"members\": [\"MA\", \"TS\", \"GM\"], \"currentGoal\": \"Some task for front-end\", 'workload': 75},\r\n                    {\"departmentName\": 'Front-end Development', \"members\": [\"MA\", \"TS\", \"GM\"], \"currentGoal\": \"Some task for front-end\", 'workload': 55},\r\n                    {\"departmentName\": 'Front-end Development', \"members\": [\"MA\", \"TS\", \"GM\"], \"currentGoal\": \"Some task for front-end\", 'workload': 75},\r\n                    {\"departmentName\": 'Front-end Development', \"members\": [\"MA\", \"TS\", \"GM\"], \"currentGoal\": \"Some task for front-end\", 'workload': 40},\r\n                    {\"departmentName\": 'Front-end Development', \"members\": [\"MA\", \"TS\", \"GM\"], \"currentGoal\": \"Some task for front-end\", 'workload': 95},\r\n                    {\"departmentName\": 'Front-end Development', \"members\": [\"MA\", \"TS\", \"GM\"], \"currentGoal\": \"Some task for front-end\", 'workload': 75},\r\n                    {\"departmentName\": 'Front-end Development', \"members\": [\"MA\", \"TS\", \"GM\"], \"currentGoal\": \"Some task for front-end\", 'workload': 45},\r\n                    {\"departmentName\": 'Front-end Development', \"members\": [\"MA\", \"TS\", \"GM\"], \"currentGoal\": \"Some task for front-end\", 'workload': 75},\r\n                    ];\r\n    const [loading, setLoading] = useState(false);\r\n    const [page, setPage] = useState(1);\r\n    const [departments, setDepartments] = useState(fakeData);\r\n\r\n    const handleChangePage = (dataKey) =>{\r\n        setPage(dataKey)\r\n    }\r\n\r\n    const getData = (items) => {\r\n        const start = 10*page - 10;\r\n        const end = 10*page - 1;\r\n        let newItems = items.filter((item, i) => {return i >= start && i <= end});\r\n        return newItems\r\n    }\r\n\r\n\r\n    return (\r\n       <Container className=\"container\">\r\n            <FlexboxGrid justify=\"space-between\" align=\"middle\">\r\n                <FlexboxGrid.Item colspan={18}>\r\n                    <FlexboxGrid justify=\"start\"  align=\"middle\">\r\n                        <h3>Departments</h3>\r\n                        <div className=\"search\">\r\n                            <InputGroup size=\"md\">\r\n                                <Input />\r\n                                <InputGroup.Button>\r\n                                    <Icon icon=\"search\" />\r\n                                </InputGroup.Button>\r\n                            </InputGroup>\r\n                        </div>\r\n                    </FlexboxGrid>\r\n                </FlexboxGrid.Item>\r\n                <FlexboxGrid.Item colspan={6}>\r\n                    <FlexboxGrid justify=\"end\">\r\n                        <Button className=\"button-margin-right button-shadow\" color=\"orange\">Table View</Button>\r\n                        <Button className=\"button-shadow\" color=\"white\">Card View</Button>\r\n                    </FlexboxGrid>\r\n                </FlexboxGrid.Item>\r\n            </FlexboxGrid>\r\n            <div className=\"card\">\r\n                <Table autoHeight affixHeader affixHorizontalScrollbar data={getData(departments)}>\r\n                    <Table.Column width={240} align=\"start\" resizable>\r\n                        <Table.HeaderCell>Department</Table.HeaderCell>\r\n                        <Table.Cell dataKey=\"departmentName\" />\r\n                    </Table.Column>\r\n\r\n                    <Table.Column width={240} align=\"start\" resizable>\r\n                        <Table.HeaderCell>Members</Table.HeaderCell>\r\n                        <MembersCell dataKey=\"members\"/>\r\n                    </Table.Column>\r\n\r\n                    <Table.Column width={360} align=\"start\" resizable>\r\n                        <Table.HeaderCell>Current Goal</Table.HeaderCell>\r\n                        <Table.Cell dataKey=\"currentGoal\" />\r\n                    </Table.Column>\r\n\r\n                    <Table.Column width={360} align=\"start\" resizable>\r\n                        <Table.HeaderCell>Workload</Table.HeaderCell>\r\n                        <ProgressCell dataKey=\"workload\"/>\r\n                    </Table.Column>\r\n                    \r\n                </Table>\r\n                <Table.Pagination\r\n                    activePage={page}\r\n                    displayLength={10}\r\n                    total={departments.length}\r\n                    onChangePage={handleChangePage}\r\n                />\r\n            </div>\r\n            <FlexboxGrid justify=\"end\" align=\"top\">\r\n                <Button className=\"button-margin-top button-shadow\" color=\"orange\">Add New Department</Button>\r\n            </FlexboxGrid>\r\n            \r\n        </Container>\r\n    )\r\n}\r\n","D:\\Main school folder\\BA Project\\Code\\Widget-Builder-development\\client\\src\\settings\\pages\\Settings.js",[],"D:\\Main school folder\\BA Project\\Code\\Widget-Builder-development\\client\\src\\co-workers\\pages\\CoWorkers.js",["125"],"import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { Table, FlexboxGrid, Progress, Tag, Input, InputGroup, Icon, Button, Container } from 'rsuite';\r\n\r\n\r\n\r\nconst ProgressCell = ({ rowData, dataKey, ...props }) => (\r\n    <Table.Cell placement=\"start\" {...props} style={{ padding: 0, height: '100%' }}>\r\n        <FlexboxGrid align=\"middle\" style={{ padding: 0, height: '100%', marginRight: '36px'}}>\r\n            <Progress.Line percent={rowData[dataKey]} strokeColor={rowData[dataKey] < 75 ? '#4caf50' : rowData[dataKey] > 75 && rowData[dataKey] < 100 ? '#ffc107' : \"#f44336\" } />\r\n        </FlexboxGrid>\r\n    </Table.Cell>\r\n);\r\nconst StatusCell = ({ rowData, dataKey, ...props }) => (\r\n    <Table.Cell placement=\"center\" {...props} style={{ padding: 0, height: '100%' }}>\r\n        <FlexboxGrid justify=\"start\" style={{ padding: '10px', height: '100%' }}>\r\n            <Tag color={rowData[dataKey] ? 'red' : 'green'}>{rowData[dataKey] ? 'Busy' : 'Free'}</Tag>\r\n        </FlexboxGrid>\r\n    </Table.Cell>\r\n);\r\n\r\n\r\n\r\n\r\nexport default function CoWorkers() {\r\n\r\n    const [page, setPage] = useState(1);\r\n    const [coWorkers, setCoWorkers] = useState([])\r\n\r\n    const handleChangePage = (dataKey) =>{\r\n        setPage(dataKey)\r\n    }\r\n\r\n    const getData = (items) => {\r\n        const start = 10*page - 10;\r\n        const end = 10*page - 1;\r\n        let newItems = items.filter((item, i) => {return i >= start && i <= end});\r\n        return newItems\r\n    }\r\n   \r\n    const getCoWorkers = () => {\r\n        axios.get('/co-workers')\r\n            .then((coWorkers) => {\r\n                //Filters out users that are not supposed to be in the list.\r\n                //This needs to be  done because Jira categorizes users and apps as the same thing. (Not sure why)\r\n                let filteredCoWorkers = coWorkers.data.filter(person => person.accountType === \"atlassian\")\r\n                mergeData(filteredCoWorkers);\r\n            })\r\n            .catch(err => console.log(err));\r\n        \r\n    }\r\n\r\n    const calculateWorkload = async (userId) => {\r\n        const resp = await axios.get(`/co-workers/get-workload/${userId}`)\r\n            .then((allIssues) => {\r\n                let worktime = 0;\r\n                let est = 0;\r\n                let spt = 0;\r\n                if(allIssues.data.issues.length > 0){\r\n                    for(let i = 0; i < allIssues.data.issues.length; i++){\r\n                        if(allIssues.data.issues[i].fields.aggregateprogress.total !== null){\r\n                            // 648000 Seconds = 180 hours => Dividing by 6480 to convert to percent\r\n                            est = allIssues.data.issues[i].fields.aggregateprogress.total\r\n                        } else {\r\n                            est = 0;\r\n                        }\r\n                        if(allIssues.data.issues[i].fields.aggregateprogress.progress !== null){\r\n                            // 648000 Seconds = 180 hours => Dividing by 6480 to convert to percent\r\n                            spt = allIssues.data.issues[i].fields.aggregateprogress.progress\r\n                        } else {\r\n                            spt = 0;\r\n                        }\r\n                        if(est > spt){\r\n                            worktime = worktime + est;\r\n                        } else {\r\n                            worktime = worktime + spt;\r\n                        }\r\n                    }\r\n                    \r\n                    return Math.round(worktime / 6480);\r\n                    \r\n                } else {\r\n                    return 0;\r\n                }\r\n            })\r\n            .catch(err => console.log(err))\r\n        return resp;\r\n    }\r\n\r\n    const mergeData = async (atlassianData) => {\r\n        let mergedData = [];\r\n        for(let i = 0; i < atlassianData.length; i++){\r\n            let person = atlassianData[i];\r\n            let workload = await calculateWorkload(person.accountId);\r\n            let newPerson = {};\r\n            newPerson.name = person.displayName;\r\n            //newPerson.status = database.status\r\n            newPerson.workload = workload;\r\n            //newPerson.message = database.message\r\n            mergedData.push(newPerson);\r\n        };\r\n        setCoWorkers(mergedData);\r\n    }\r\n\r\n    useEffect(() => {\r\n        getCoWorkers();\r\n    },[])\r\n\r\n    return (\r\n        <Container className=\"container\">\r\n            <FlexboxGrid justify=\"space-between\" align=\"middle\">\r\n                <FlexboxGrid.Item colspan={18}>\r\n                    <FlexboxGrid justify=\"start\"  align=\"middle\">\r\n                        <h3>Co-Workers</h3>\r\n                        <div className=\"search\">\r\n                            <InputGroup size=\"md\">\r\n                                <Input />\r\n                                <InputGroup.Button>\r\n                                    <Icon icon=\"search\" />\r\n                                </InputGroup.Button>\r\n                            </InputGroup>\r\n                        </div>\r\n                    </FlexboxGrid>\r\n                </FlexboxGrid.Item>\r\n                <FlexboxGrid.Item colspan={6}>\r\n                    <FlexboxGrid justify=\"end\">\r\n                        <Button className=\"button-margin-right button-shadow\" color=\"orange\">Table View</Button>\r\n                        <Button className=\"button-shadow\">Card View</Button>\r\n                    </FlexboxGrid>\r\n                </FlexboxGrid.Item>\r\n            </FlexboxGrid>\r\n            <div className=\"card\">\r\n                <Table autoHeight affixHeader affixHorizontalScrollbar data={getData(coWorkers)}>\r\n                    <Table.Column width={240} justify=\"start\" resizable>\r\n                        <Table.HeaderCell>Name</Table.HeaderCell>\r\n                        <Table.Cell dataKey=\"name\" />\r\n                    </Table.Column>\r\n\r\n                    <Table.Column width={120} justify=\"start\" resizable>\r\n                        <Table.HeaderCell>Status</Table.HeaderCell>\r\n                        <StatusCell dataKey=\"busyStatus\"/>\r\n                    </Table.Column>\r\n                    \r\n                    <Table.Column width={240} justify=\"start\" resizable>\r\n                        <Table.HeaderCell>Job Title</Table.HeaderCell>\r\n                        <Table.Cell dataKey=\"jobTitle\" />\r\n                    </Table.Column>\r\n\r\n                    <Table.Column width={360} justify=\"start\" resizable>\r\n                        <Table.HeaderCell>Workload</Table.HeaderCell>\r\n                        <ProgressCell dataKey=\"workload\"/>\r\n                    </Table.Column>\r\n\r\n                    <Table.Column width={480} justify=\"start\" resizable>\r\n                        <Table.HeaderCell>Message</Table.HeaderCell>\r\n                        <Table.Cell dataKey=\"message\" />\r\n                    </Table.Column>\r\n                    \r\n                </Table>\r\n                <Table.Pagination\r\n                    activePage={page}\r\n                    displayLength={10}\r\n                    total={coWorkers.length}\r\n                    onChangePage={handleChangePage}\r\n                />\r\n            </div>\r\n            <Button onClick={getCoWorkers} className=\"button-shadow\" color=\"orange\">Get Co-Workers</Button>\r\n        </Container>\r\n    )\r\n}\r\n","D:\\Main school folder\\BA Project\\Code\\Widget-Builder-development\\client\\src\\shared\\components\\Header.js",[],"D:\\Main school folder\\BA Project\\Code\\Widget-Builder-development\\client\\src\\shared\\components\\SideNav.js",[],"D:\\Main school folder\\BA Project\\Code\\Widget-Builder-development\\client\\src\\register\\pages\\RegisterTwo.js",["126"],"import React, { useState, useContext, useEffect } from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport axios from 'axios';\r\nimport { Container, Col, Input, Button, SelectPicker, Divider } from 'rsuite';\r\nimport { AuthContext } from '../../shared/context/authContext';\r\nimport WidgetBuilderSvg from '../../shared/svgs/WidgetBuilderSvg';\r\nimport JiraSvg from '../../shared/svgs/JiraSvg';\r\nimport MondaySvg from '../../shared/svgs/MondaySvg';\r\nimport './register.scss';\r\n\r\nconst Register = props =>  {\r\n    \r\n    const [jiraUsers, setJiraUsers] = useState([]);\r\n    const [selectedJiraAccount, setSelectedJiraAccount] = useState(null);\r\n    const [name, setName] = useState(null);\r\n    const history = useHistory();\r\n    const auth = useContext(AuthContext);\r\n    const loginClicked = () => {\r\n        history.push('/login');\r\n    }\r\n\r\n    const getAllJiraUsers = () => {\r\n        axios.get('/users/register-step-two/get-all-jira-users')\r\n            .then((coWorkers) => {\r\n               \r\n                //Filters out users that are not supposed to be in the list.\r\n                //This needs to be  done because Jira categorizes users and apps as the same thing. (Not sure why)\r\n                let filteredCoWorkers = coWorkers.data.filter(person => person.accountType === \"atlassian\");\r\n                console.log(filteredCoWorkers);\r\n                setJiraUsers(filteredCoWorkers);\r\n            })\r\n            .catch(err => console.log(err));\r\n    \r\n    }\r\n\r\n    const onSubmit = (event) => {\r\n        event.preventDefault();\r\n        console.log(auth.currUser.email);\r\n        axios({\r\n            method: \"PUT\",\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            data: {\r\n                email: auth.currUser.email,\r\n                jiraId: selectedJiraAccount,\r\n                name: name\r\n            },\r\n            withCredentials: true,\r\n            url: \"/users/register-step-two/link-jira-account\",\r\n            }).then((res) => {\r\n                console.log(res)\r\n                history.push('/')\r\n            });\r\n    }\r\n\r\n    const selectUser = (id, userData) => {\r\n        console.log(id);\r\n        setSelectedJiraAccount(id);\r\n        setName(userData.displayName);\r\n    }\r\n\r\n    useEffect(() => {\r\n        getAllJiraUsers()\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"register-container\">\r\n            <Container className=\"container content\">\r\n                <span className=\"center\">\r\n                    <WidgetBuilderSvg/>\r\n                </span>\r\n\r\n                <Col lg={6} className=\"center\">\r\n                    <div className=\"card card-register\">\r\n                        <h4>Connect to your task management application</h4>\r\n                        <div className=\"button-margin-top\">\r\n                            <JiraSvg/>\r\n                            <SelectPicker \r\n                                onSelect={selectUser}\r\n                                data={jiraUsers}  \r\n                                labelKey=\"displayName\"\r\n                                valueKey=\"accountId\"\r\n                                style={{ width: \"100%\" }} />\r\n                        </div>\r\n                         {/* \r\n                        <Divider>or</Divider>\r\n                        \r\n                        <div className=\"divider-margin-top\">   \r\n                            <MondaySvg/>\r\n                            <SelectPicker \r\n                                data={[{\r\n                                    \"label\": \"Jiangxi\",\r\n                                    \"value\": 31\r\n                                    }]}  \r\n                                style={{ width: \"100%\" }} />\r\n                        </div>\r\n                        */}\r\n                        <Divider>or</Divider>\r\n                        \r\n                        <div className=\"divider-margin-top\">\r\n                            <label for=\"firsname\">First Name</label>\r\n                            <Input name=\"firstname\" placeholder=\"First Name\" />\r\n                        </div>\r\n\r\n                        <div className=\"divider-margin-top\">\r\n                            <label for=\"lastname\">Last Name</label>\r\n                            <Input name=\"lastname\" placeholder=\"Last Name\" />\r\n                        </div>\r\n                    \r\n                        <Button \r\n                            onClick={onSubmit}\r\n                            className=\"submit-button button-margin-top bold button-shadow\" \r\n                            color=\"orange\">\r\n                            Link Jira Account\r\n                        </Button>\r\n                        <Button \r\n                            className=\"submit-button divider-margin-top bold button-shadow\" \r\n                            color=\"orange\"\r\n                            onClick={loginClicked}\r\n                            appearance=\"ghost\">\r\n                            Skip\r\n                        </Button>\r\n                    </div>\r\n                </Col>\r\n            </Container>\r\n\r\n            <footer className=\"footer\">\r\n                <p>Developed by Maria and Tomas 2021</p>\r\n                <p>All rights reserved by Maria and Tomas  2021</p>\r\n            </footer>\r\n        </div>\r\n       \r\n    );\r\n}\r\n\r\nexport default Register;","D:\\Main school folder\\BA Project\\Code\\Widget-Builder-development\\client\\src\\shared\\context\\authContext.js",[],"D:\\Main school folder\\BA Project\\Code\\Widget-Builder-development\\client\\src\\register\\pages\\Register.js",["127"],"import React, { useEffect } from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Container, Col, Input, Button } from 'rsuite';\r\nimport Axios from 'axios';\r\n\r\nimport WidgetBuilderSvg from '../../shared/svgs/WidgetBuilderSvg';\r\nimport './register.scss';\r\n\r\nconst Register = props =>  {\r\n\r\n    const history = useHistory();\r\n\r\n    const loginClicked = () => {\r\n        history.push('/login');\r\n    }\r\n\r\n    const onSubmit = (event) => {\r\n        event.preventDefault();\r\n\r\n        Axios({\r\n            method: \"POST\",\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            data: {\r\n                email: event.target.email.value,\r\n                password: event.target.password.value,\r\n                jobTitle: event.target.jobTitle.value\r\n            },\r\n            withCredentials: true,\r\n            url: \"/users/register\",\r\n            }).then((res) => history.push('/login'));\r\n    }\r\n\r\n    return (\r\n        <div className=\"register-container\">\r\n            <Container className=\"container content\">\r\n                <span className=\"center\">\r\n                    <WidgetBuilderSvg/>\r\n                </span>\r\n\r\n                <Col lg={6} className=\"center\">\r\n                    <div className=\"card\">\r\n                        <form onSubmit={onSubmit}>\r\n                            <h4>Welcome to the Widget Builder Registration</h4>\r\n                        \r\n                            <div className=\"button-margin-top\">\r\n                                <label for=\"email\">Email</label>\r\n                                <Input name=\"email\" placeholder=\"Email\" />\r\n                            </div>\r\n                            \r\n                            <div className=\"button-margin-top\">   \r\n                                <label for=\"password\">Password</label>\r\n                                <Input name=\"password\" placeholder=\"Password\" type=\"password\"/>\r\n                            </div>\r\n                            \r\n                            <div className=\"button-margin-top\">\r\n                                <label for=\"jobTitle\">Job Title (Optional)</label>\r\n                                <Input name=\"jobTitle\" placeholder=\"Job Title\" />\r\n                            </div>\r\n                        \r\n                            <Button \r\n                                className=\"submit-button button-margin-top bold button-shadow\" \r\n                                type=\"submit\"\r\n                                color=\"orange\">\r\n                                Sing up\r\n                            </Button>\r\n                            <Button \r\n                                className=\"submit-button button-margin-top bold button-shadow\" \r\n                                color=\"orange\" \r\n                                appearance=\"ghost\"\r\n                                onClick={loginClicked}>\r\n                                Log in\r\n                            </Button>\r\n                        </form>  \r\n                    </div>\r\n                </Col>\r\n            </Container>\r\n\r\n            <footer className=\"footer\">\r\n                <p>Developed by Maria and Tomas 2020</p>\r\n                <p>All rights reserved by Maria and Tomas 2020</p>\r\n            </footer>\r\n        </div>\r\n       \r\n    );\r\n}\r\n\r\nexport default Register;","D:\\Main school folder\\BA Project\\Code\\Widget-Builder-development\\client\\src\\login\\pages\\Login.js",["128"],"import React, { useContext } from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Container, Col, Input, Button } from 'rsuite';\r\nimport Axios from 'axios';\r\n\r\nimport WidgetBuilderSvg from '../../shared/svgs/WidgetBuilderSvg';\r\nimport '../../register/pages/register.scss';\r\n\r\nconst Login = props =>  {\r\n    const history = useHistory();\r\n\r\n    const registerClicked = () => {\r\n        history.push('/register');\r\n    }\r\n\r\n    const onSubmit = (event) => {\r\n        event.preventDefault();\r\n\r\n        Axios({\r\n            method: \"POST\",\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            data: {\r\n                email: event.target.email.value,\r\n                password: event.target.password.value\r\n            },\r\n            withCredentials: true,\r\n            url: \"/users/login\",\r\n            })\r\n            .then((res) => {\r\n                console.log(res);\r\n                history.push('/');\r\n            });\r\n    }\r\n\r\n    return (\r\n        <div className=\"register-container\">\r\n            <Container className=\"container content\">\r\n                <span className=\"center\">\r\n                    <WidgetBuilderSvg/>\r\n                </span>\r\n\r\n                <Col lg={6} className=\"center\">\r\n                    <div className=\"card\">\r\n                        <form onSubmit={onSubmit}>\r\n                            <h4>Log in</h4>\r\n                            <div className=\"button-margin-top\">\r\n                                <label for=\"email\">Email</label>\r\n                                <Input name=\"email\" placeholder=\"Email\" />\r\n                            </div>\r\n                            \r\n                            <div className=\"button-margin-top\">   \r\n                                <label for=\"password\">Password</label>\r\n                                <Input name=\"password\" type=\"password\" placeholder=\"Password\" />\r\n                            </div>\r\n                        \r\n                            <Button \r\n                                className=\"submit-button button-margin-top bold button-shadow\" \r\n                                type=\"submit\" \r\n                                color=\"orange\">\r\n                                Log in\r\n                            </Button>\r\n                            <Button \r\n                                className=\"submit-button divider-margin-top bold button-shadow\" \r\n                                onClick={registerClicked}\r\n                                color=\"orange\" \r\n                                appearance=\"ghost\">\r\n                                Sign up\r\n                            </Button>\r\n                        </form>\r\n                    </div>\r\n                </Col>\r\n            </Container>\r\n\r\n            <footer className=\"footer\">\r\n                <p>Developed by Maria and Tomas 2020</p>\r\n                <p>All rights reserved by Maria and Tomas 2020</p>\r\n            </footer>\r\n        </div>\r\n       \r\n    );\r\n}\r\n\r\nexport default Login;","D:\\Main school folder\\BA Project\\Code\\Widget-Builder-development\\client\\src\\shared\\svgs\\MondaySvg.js",[],"D:\\Main school folder\\BA Project\\Code\\Widget-Builder-development\\client\\src\\shared\\svgs\\JiraSvg.js",[],"D:\\Main school folder\\BA Project\\Code\\Widget-Builder-development\\client\\src\\shared\\svgs\\WidgetBuilderSvg.js",[],"D:\\Main school folder\\BA Project\\Code\\Widget-Builder-development\\client\\src\\widget-builder\\components\\HeadingLarge.js",[],"D:\\Main school folder\\BA Project\\Code\\Widget-Builder-development\\client\\src\\widget-builder\\components\\HeadingSmall.js",[],"D:\\Main school folder\\BA Project\\Code\\Widget-Builder-development\\client\\src\\widget-builder\\components\\HeadingMedium.js",[],"D:\\Main school folder\\BA Project\\Code\\Widget-Builder-development\\client\\src\\widget-builder\\components\\Paragraph.js",[],"D:\\Main school folder\\BA Project\\Code\\Widget-Builder-development\\client\\src\\widget-builder\\components\\Link.js",[],"D:\\Main school folder\\BA Project\\Code\\Widget-Builder-development\\client\\src\\shared\\components\\popup\\Popup.js",["129"],"import React, { useState } from 'react';\r\nimport './Popup.scss';\r\n\r\nconst Popup = (props) => {\r\n    const [close, setClose] = useState(false);\r\n\r\n    const closePopup = () => {\r\n        setClose(true);\r\n        if(props.clearPopupState){\r\n            props.clearPopupState();\r\n        }\r\n    }\r\n\r\n    let popUp = close === true ? null : (\r\n        <div id=\"modal\" className=\"modal-container\">\r\n            <div className=\"modal-wrap modal-wrap-mobile\">\r\n                <div className=\"popup-container\">{props.children}</div>\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n    // When the user clicks anywhere outside of the modal, close it\r\n    window.onclick = (event) => {\r\n        if (event.target.id == \"modal\") {\r\n            closePopup();\r\n        }\r\n    }\r\n    \r\n    return(\r\n        <React.Fragment>\r\n            {popUp}\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default Popup;",{"ruleId":"130","replacedBy":"131"},{"ruleId":"132","replacedBy":"133"},{"ruleId":"134","severity":1,"message":"135","line":1,"column":40,"nodeType":"136","messageId":"137","endLine":1,"endColumn":49},{"ruleId":"134","severity":1,"message":"138","line":1,"column":17,"nodeType":"136","messageId":"137","endLine":1,"endColumn":25},{"ruleId":"134","severity":1,"message":"139","line":1,"column":27,"nodeType":"136","messageId":"137","endLine":1,"endColumn":37},{"ruleId":"134","severity":1,"message":"135","line":1,"column":39,"nodeType":"136","messageId":"137","endLine":1,"endColumn":48},{"ruleId":"134","severity":1,"message":"140","line":2,"column":10,"nodeType":"136","messageId":"137","endLine":2,"endColumn":20},{"ruleId":"134","severity":1,"message":"141","line":2,"column":22,"nodeType":"136","messageId":"137","endLine":2,"endColumn":30},{"ruleId":"134","severity":1,"message":"142","line":4,"column":8,"nodeType":"136","messageId":"137","endLine":4,"endColumn":13},{"ruleId":"134","severity":1,"message":"143","line":6,"column":10,"nodeType":"136","messageId":"137","endLine":6,"endColumn":21},{"ruleId":"134","severity":1,"message":"144","line":3,"column":44,"nodeType":"136","messageId":"137","endLine":3,"endColumn":51},{"ruleId":"134","severity":1,"message":"145","line":23,"column":31,"nodeType":"136","messageId":"137","endLine":23,"endColumn":51},{"ruleId":"134","severity":1,"message":"146","line":32,"column":12,"nodeType":"136","messageId":"137","endLine":32,"endColumn":18},{"ruleId":"134","severity":1,"message":"147","line":32,"column":20,"nodeType":"136","messageId":"137","endLine":32,"endColumn":29},{"ruleId":"134","severity":1,"message":"148","line":76,"column":11,"nodeType":"136","messageId":"137","endLine":76,"endColumn":22},{"ruleId":"149","severity":1,"message":"150","line":98,"column":8,"nodeType":"151","endLine":98,"endColumn":17,"suggestions":"152"},{"ruleId":"134","severity":1,"message":"153","line":116,"column":17,"nodeType":"136","messageId":"137","endLine":116,"endColumn":25},{"ruleId":"154","severity":1,"message":"155","line":230,"column":57,"nodeType":"156","endLine":230,"endColumn":71},{"ruleId":"134","severity":1,"message":"157","line":2,"column":40,"nodeType":"136","messageId":"137","endLine":2,"endColumn":43},{"ruleId":"134","severity":1,"message":"158","line":48,"column":12,"nodeType":"136","messageId":"137","endLine":48,"endColumn":19},{"ruleId":"134","severity":1,"message":"159","line":48,"column":21,"nodeType":"136","messageId":"137","endLine":48,"endColumn":31},{"ruleId":"134","severity":1,"message":"160","line":50,"column":25,"nodeType":"136","messageId":"137","endLine":50,"endColumn":39},{"ruleId":"149","severity":1,"message":"161","line":107,"column":7,"nodeType":"151","endLine":107,"endColumn":9,"suggestions":"162"},{"ruleId":"134","severity":1,"message":"163","line":8,"column":8,"nodeType":"136","messageId":"137","endLine":8,"endColumn":17},{"ruleId":"134","severity":1,"message":"135","line":1,"column":17,"nodeType":"136","messageId":"137","endLine":1,"endColumn":26},{"ruleId":"134","severity":1,"message":"139","line":1,"column":17,"nodeType":"136","messageId":"137","endLine":1,"endColumn":27},{"ruleId":"164","severity":1,"message":"165","line":24,"column":29,"nodeType":"166","messageId":"167","endLine":24,"endColumn":31},"no-native-reassign",["168"],"no-negated-in-lhs",["169"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'useContext' is defined but never used.","'useHistory' is defined but never used.","'Redirect' is defined but never used.","'Axios' is defined but never used.","'AuthContext' is defined but never used.","'Divider' is defined but never used.","'setAvailableElements' is assigned a value but never used.","'errors' is assigned a value but never used.","'setErrors' is assigned a value but never used.","'removeFocus' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'lastFocus'. Either include it or remove the dependency array.","ArrayExpression",["170"],"'elements' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Tag' is defined but never used.","'loading' is assigned a value but never used.","'setLoading' is assigned a value but never used.","'setDepartments' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getCoWorkers'. Either include it or remove the dependency array.",["171"],"'MondaySvg' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation",{"desc":"172","fix":"173"},{"desc":"174","fix":"175"},"Update the dependencies array to be: [counter, lastFocus]",{"range":"176","text":"177"},"Update the dependencies array to be: [getCoWorkers]",{"range":"178","text":"179"},[3929,3938],"[counter, lastFocus]",[4330,4332],"[getCoWorkers]"]