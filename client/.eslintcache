[{"D:\\Main school folder\\BA Project\\Code\\Widget-Builder-development\\client\\src\\index.js":"1","D:\\Main school folder\\BA Project\\Code\\Widget-Builder-development\\client\\src\\reportWebVitals.js":"2","D:\\Main school folder\\BA Project\\Code\\Widget-Builder-development\\client\\src\\App.js":"3","D:\\Main school folder\\BA Project\\Code\\Widget-Builder-development\\client\\src\\dashboard\\pages\\Dashboard.js":"4","D:\\Main school folder\\BA Project\\Code\\Widget-Builder-development\\client\\src\\widget-builder\\pages\\WidgetBuilder.js":"5","D:\\Main school folder\\BA Project\\Code\\Widget-Builder-development\\client\\src\\departments\\pages\\Departments.js":"6","D:\\Main school folder\\BA Project\\Code\\Widget-Builder-development\\client\\src\\settings\\pages\\Settings.js":"7","D:\\Main school folder\\BA Project\\Code\\Widget-Builder-development\\client\\src\\co-workers\\pages\\CoWorkers.js":"8","D:\\Main school folder\\BA Project\\Code\\Widget-Builder-development\\client\\src\\shared\\components\\Header.js":"9","D:\\Main school folder\\BA Project\\Code\\Widget-Builder-development\\client\\src\\shared\\components\\SideNav.js":"10"},{"size":500,"mtime":1609667750000,"results":"11","hashOfConfig":"12"},{"size":362,"mtime":1609667750000,"results":"13","hashOfConfig":"12"},{"size":1473,"mtime":1609708609080,"results":"14","hashOfConfig":"12"},{"size":1597,"mtime":1609708609087,"results":"15","hashOfConfig":"12"},{"size":160,"mtime":1609673656604,"results":"16","hashOfConfig":"12"},{"size":6525,"mtime":1609747340670,"results":"17","hashOfConfig":"12"},{"size":149,"mtime":1609673656603,"results":"18","hashOfConfig":"12"},{"size":8399,"mtime":1609746634844,"results":"19","hashOfConfig":"12"},{"size":2048,"mtime":1609708609090,"results":"20","hashOfConfig":"12"},{"size":3956,"mtime":1609708609093,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"3w953e",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"24"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"24"},"D:\\Main school folder\\BA Project\\Code\\Widget-Builder-development\\client\\src\\index.js",[],["46","47"],"D:\\Main school folder\\BA Project\\Code\\Widget-Builder-development\\client\\src\\reportWebVitals.js",[],"D:\\Main school folder\\BA Project\\Code\\Widget-Builder-development\\client\\src\\App.js",[],"D:\\Main school folder\\BA Project\\Code\\Widget-Builder-development\\client\\src\\dashboard\\pages\\Dashboard.js",[],"D:\\Main school folder\\BA Project\\Code\\Widget-Builder-development\\client\\src\\widget-builder\\pages\\WidgetBuilder.js",[],"D:\\Main school folder\\BA Project\\Code\\Widget-Builder-development\\client\\src\\departments\\pages\\Departments.js",["48","49","50","51"],"import React, { useState } from 'react'\r\nimport { Table, FlexboxGrid, Progress, Tag, Input, InputGroup, Icon, Button, Avatar } from 'rsuite';\r\n\r\n\r\nconst ProgressCell = ({ rowData, dataKey, ...props }) => (\r\n    <Table.Cell placement=\"start\" {...props} style={{ padding: 0, height: '100%' }}>\r\n        <FlexboxGrid align=\"center\" style={{ padding: 0, height: '100%', marginRight: '36px'}}>\r\n            <Progress.Line percent={rowData[dataKey]} strokeColor=\"#ffc107\" />\r\n        </FlexboxGrid>\r\n    </Table.Cell>\r\n);\r\nconst MembersCell = ({ rowData, dataKey, ...props }) => (\r\n    \r\n    <Table.Cell placement=\"center\" {...props} style={{ padding: 0, height: '100%' }}>\r\n        <FlexboxGrid align=\"start\" style={{ padding: '10px', height: '100%' }}>\r\n            <div className=\"avatar-group\">\r\n                 {\r\n                rowData.members.map(member => \r\n                    <Avatar size=\"sm\" className=\"avatar-margin avatar-color\">{member}</Avatar>\r\n                )\r\n            }\r\n            \r\n            </div>\r\n        </FlexboxGrid>\r\n    </Table.Cell>\r\n);\r\n\r\n\r\nexport default function Departments() {\r\n\r\n\r\n    const fakeData =[\r\n                    {\"departmentName\": 'Front-end Development', \"members\": [\"MA\", \"TS\", \"GM\"], \"currentGoal\": \"Some task for front-end\", 'workload': 175},\r\n                    {\"departmentName\": 'Front-end Development', \"members\": [\"MA\", \"TS\", \"GM\"], \"currentGoal\": \"Some task for front-end\", 'workload': 75},\r\n                    {\"departmentName\": 'Front-end Development', \"members\": [\"MA\", \"TS\", \"GM\"], \"currentGoal\": \"Some task for front-end\", 'workload': 75},\r\n                    {\"departmentName\": 'Front-end Development', \"members\": [\"MA\", \"TS\", \"GM\"], \"currentGoal\": \"Some task for front-end\", 'workload': 85},\r\n                    {\"departmentName\": 'Front-end Development', \"members\": [\"MA\", \"TS\", \"GM\"], \"currentGoal\": \"Some task for front-end\", 'workload': 25},\r\n                    {\"departmentName\": 'Front-end Development', \"members\": [\"MA\", \"TS\", \"GM\"], \"currentGoal\": \"Some task for front-end\", 'workload': 0},\r\n                    {\"departmentName\": 'Front-end Development', \"members\": [\"MA\", \"TS\", \"GM\"], \"currentGoal\": \"Some task for front-end\", 'workload': 75},\r\n                    {\"departmentName\": 'Front-end Development', \"members\": [\"MA\", \"TS\", \"GM\"], \"currentGoal\": \"Some task for front-end\", 'workload': 55},\r\n                    {\"departmentName\": 'Front-end Development', \"members\": [\"MA\", \"TS\", \"GM\"], \"currentGoal\": \"Some task for front-end\", 'workload': 75},\r\n                    {\"departmentName\": 'Front-end Development', \"members\": [\"MA\", \"TS\", \"GM\"], \"currentGoal\": \"Some task for front-end\", 'workload': 40},\r\n                    {\"departmentName\": 'Front-end Development', \"members\": [\"MA\", \"TS\", \"GM\"], \"currentGoal\": \"Some task for front-end\", 'workload': 95},\r\n                    {\"departmentName\": 'Front-end Development', \"members\": [\"MA\", \"TS\", \"GM\"], \"currentGoal\": \"Some task for front-end\", 'workload': 75},\r\n                    {\"departmentName\": 'Front-end Development', \"members\": [\"MA\", \"TS\", \"GM\"], \"currentGoal\": \"Some task for front-end\", 'workload': 45},\r\n                    {\"departmentName\": 'Front-end Development', \"members\": [\"MA\", \"TS\", \"GM\"], \"currentGoal\": \"Some task for front-end\", 'workload': 75},\r\n                    ];\r\n    const [loading, setLoading] = useState(false);\r\n    const [page, setPage] = useState(1);\r\n    const [departments, setDepartments] = useState(fakeData);\r\n\r\n    const handleChangePage = (dataKey) =>{\r\n        setPage(dataKey)\r\n    }\r\n\r\n    const getData = (items) => {\r\n        const start = 10*page - 10;\r\n        const end = 10*page - 1;\r\n        let newItems = items.filter((item, i) => {return i >= start && i <= end});\r\n        return newItems\r\n    }\r\n\r\n\r\n    return (\r\n       <div className=\"show-grid\">\r\n            <FlexboxGrid justify=\"space-between\" align=\"middle\">\r\n                <FlexboxGrid.Item colspan={18}>\r\n                    <FlexboxGrid justify=\"start\"  align=\"middle\">\r\n                        <h3>Departments</h3>\r\n                        <div className=\"search\">\r\n                            <InputGroup size=\"md\">\r\n                                <Input />\r\n                                <InputGroup.Button>\r\n                                    <Icon icon=\"search\" />\r\n                                </InputGroup.Button>\r\n                            </InputGroup>\r\n                        </div>\r\n                    </FlexboxGrid>\r\n                </FlexboxGrid.Item>\r\n                <FlexboxGrid.Item colspan={6}>\r\n                    <FlexboxGrid justify=\"end\">\r\n                        <Button className=\"button-margin-right\" color=\"orange\">Table View</Button>\r\n                        <Button>Card View</Button>\r\n                    </FlexboxGrid>\r\n                </FlexboxGrid.Item>\r\n            </FlexboxGrid>\r\n            <div className=\"card\">\r\n                <Table autoHeight affixHeader affixHorizontalScrollbar data={getData(departments)}>\r\n                    <Table.Column width={240} align=\"start\" resizable>\r\n                        <Table.HeaderCell>Department</Table.HeaderCell>\r\n                        <Table.Cell dataKey=\"departmentName\" />\r\n                    </Table.Column>\r\n\r\n                    <Table.Column width={240} align=\"start\" resizable>\r\n                        <Table.HeaderCell>Members</Table.HeaderCell>\r\n                        <MembersCell dataKey=\"members\"/>\r\n                    </Table.Column>\r\n\r\n                    <Table.Column width={360} align=\"start\" resizable>\r\n                        <Table.HeaderCell>Current Goal</Table.HeaderCell>\r\n                        <Table.Cell dataKey=\"currentGoal\" />\r\n                    </Table.Column>\r\n\r\n                    <Table.Column width={360} align=\"start\" resizable>\r\n                        <Table.HeaderCell>Workload</Table.HeaderCell>\r\n                        <ProgressCell dataKey=\"workload\"/>\r\n                    </Table.Column>\r\n                    \r\n                </Table>\r\n                <Table.Pagination\r\n                    activePage={page}\r\n                    displayLength={10}\r\n                    total={departments.length}\r\n                    onChangePage={handleChangePage}\r\n                />\r\n            </div>\r\n            <FlexboxGrid justify=\"end\" align=\"top\">\r\n                <Button className=\"button-margin-top\" color=\"orange\">Add New Department</Button>\r\n            </FlexboxGrid>\r\n            \r\n        </div>\r\n    )\r\n}\r\n","D:\\Main school folder\\BA Project\\Code\\Widget-Builder-development\\client\\src\\settings\\pages\\Settings.js",[],"D:\\Main school folder\\BA Project\\Code\\Widget-Builder-development\\client\\src\\co-workers\\pages\\CoWorkers.js",["52","53","54"],"import React, { useState } from 'react'\r\nimport { Table, FlexboxGrid, Progress, Tag, Input, InputGroup, Icon, Button } from 'rsuite';\r\n\r\n\r\n\r\nconst ProgressCell = ({ rowData, dataKey, ...props }) => (\r\n    <Table.Cell placement=\"start\" {...props} style={{ padding: 0, height: '100%' }}>\r\n        <FlexboxGrid align=\"center\" style={{ padding: 0, height: '100%', marginRight: '36px'}}>\r\n            <Progress.Line percent={rowData[dataKey]} strokeColor=\"#ffc107\" />\r\n        </FlexboxGrid>\r\n    </Table.Cell>\r\n);\r\nconst StatusCell = ({ rowData, dataKey, ...props }) => (\r\n    <Table.Cell placement=\"center\" {...props} style={{ padding: 0, height: '100%' }}>\r\n        <FlexboxGrid align=\"start\" style={{ padding: '10px', height: '100%' }}>\r\n            <Tag color={rowData[dataKey] ? 'red' : 'green'}>{rowData[dataKey] ? 'Busy' : 'Free'}</Tag>\r\n        </FlexboxGrid>\r\n    </Table.Cell>\r\n);\r\n\r\n\r\n\r\n\r\nexport default function CoWorkers() {\r\n\r\n    const fakeData =[\r\n                    {\"name\": 'Maria Aldis Gardarsdottir', \"busyStatus\": true, \"jobTitle\": 'Front-end Developer', 'workload': 75, \"currentTask\": \"Some task for front-end\", 'message': \"I am leaving from this week. I will be back on the 24th of January\"},\r\n                    {\"name\": 'Tomas Sedurskas', \"busyStatus\": false, \"jobTitle\": 'User Interface Designer', 'workload': 65, \"currentTask\": \"Some task for design\", 'message': \"\"},\r\n                    {\"name\": 'Maria Aldis Gardarsdottir', \"busyStatus\": true, \"jobTitle\": 'Front-end Developer', 'workload': 75, \"currentTask\": \"Some task for front-end\", 'message': \"I am leaving from this week. I will be back on the 24th of January\"},\r\n                    {\"name\": 'Tomas Sedurskas', \"busyStatus\": false, \"jobTitle\": 'User Interface Designer', 'workload': 65, \"currentTask\": \"Some task for design\", 'message': \"\"},\r\n                    {\"name\": 'Maria Aldis Gardarsdottir', \"busyStatus\": true, \"jobTitle\": 'Front-end Developer', 'workload': 75, \"currentTask\": \"Some task for front-end\", 'message': \"I am leaving from this week. I will be back on the 24th of January\"},\r\n                    {\"name\": 'Tomas Sedurskas', \"busyStatus\": false, \"jobTitle\": 'User Interface Designer', 'workload': 65, \"currentTask\": \"Some task for design\", 'message': \"\"},\r\n                    {\"name\": 'Maria Aldis Gardarsdottir', \"busyStatus\": true, \"jobTitle\": 'Front-end Developer', 'workload': 75, \"currentTask\": \"Some task for front-end\", 'message': \"I am leaving from this week. I will be back on the 24th of January\"},\r\n                    {\"name\": 'Tomas Sedurskas', \"busyStatus\": false, \"jobTitle\": 'User Interface Designer', 'workload': 65, \"currentTask\": \"Some task for design\", 'message': \"\"},\r\n                    {\"name\": 'Maria Aldis Gardarsdottir', \"busyStatus\": true, \"jobTitle\": 'Front-end Developer', 'workload': 75, \"currentTask\": \"Some task for front-end\", 'message': \"I am leaving from this week. I will be back on the 24th of January\"},\r\n                    {\"name\": 'Tomas Sedurskas', \"busyStatus\": false, \"jobTitle\": 'User Interface Designer', 'workload': 65, \"currentTask\": \"Some task for design\", 'message': \"\"},\r\n                    {\"name\": 'Maria Aldis Gardarsdottir', \"busyStatus\": true, \"jobTitle\": 'Front-end Developer', 'workload': 75, \"currentTask\": \"Some task for front-end\", 'message': \"I am leaving from this week. I will be back on the 24th of January\"},\r\n                    {\"name\": 'Tomas Sedurskas', \"busyStatus\": false, \"jobTitle\": 'User Interface Designer', 'workload': 65, \"currentTask\": \"Some task for design\", 'message': \"\"},\r\n                    {\"name\": 'Maria Aldis Gardarsdottir', \"busyStatus\": true, \"jobTitle\": 'Front-end Developer', 'workload': 75, \"currentTask\": \"Some task for front-end\", 'message': \"I am leaving from this week. I will be back on the 24th of January\"},\r\n                    {\"name\": 'Tomas Sedurskas', \"busyStatus\": false, \"jobTitle\": 'User Interface Designer', 'workload': 65, \"currentTask\": \"Some task for design\", 'message': \"\"},\r\n                    {\"name\": 'Maria Aldis Gardarsdottir', \"busyStatus\": true, \"jobTitle\": 'Front-end Developer', 'workload': 75, \"currentTask\": \"Some task for front-end\", 'message': \"I am leaving from this week. I will be back on the 24th of January\"},\r\n                    {\"name\": 'Maria Aldis Gardarsdottir', \"busyStatus\": true, \"jobTitle\": 'Front-end Developer', 'workload': 75, \"currentTask\": \"Some task for front-end\", 'message': \"I am leaving from this week. I will be back on the 24th of January\"},\r\n                    {\"name\": 'Maria Aldis Gardarsdottir', \"busyStatus\": true, \"jobTitle\": 'Front-end Developer', 'workload': 75, \"currentTask\": \"Some task for front-end\", 'message': \"I am leaving from this week. I will be back on the 24th of January\"},\r\n                    {\"name\": 'Tomas Sedurskas', \"busyStatus\": false, \"jobTitle\": 'User Interface Designer', 'workload': 65, \"currentTask\": \"Some task for design\", 'message': \"\"}\r\n                    ];\r\n    const [loading, setLoading] = useState(false);\r\n    const [page, setPage] = useState(1);\r\n    const [users, setUser] = useState(fakeData);\r\n\r\n    const handleChangePage = (dataKey) =>{\r\n        setPage(dataKey)\r\n    }\r\n\r\n    const getData = (items) => {\r\n        const start = 10*page - 10;\r\n        const end = 10*page - 1;\r\n        let newItems = items.filter((item, i) => {return i >= start && i <= end});\r\n        return newItems\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"show-grid\">\r\n            <FlexboxGrid justify=\"space-between\" align=\"middle\">\r\n                <FlexboxGrid.Item colspan={18}>\r\n                    <FlexboxGrid justify=\"start\"  align=\"middle\">\r\n                        <h3>Co-Workers</h3>\r\n                        <div className=\"search\">\r\n                            <InputGroup size=\"md\">\r\n                                <Input />\r\n                                <InputGroup.Button>\r\n                                    <Icon icon=\"search\" />\r\n                                </InputGroup.Button>\r\n                            </InputGroup>\r\n                        </div>\r\n                    </FlexboxGrid>\r\n                </FlexboxGrid.Item>\r\n                <FlexboxGrid.Item colspan={6}>\r\n                    <FlexboxGrid justify=\"end\">\r\n                        <Button className=\"button-margin-right\" color=\"orange\">Table View</Button>\r\n                        <Button>Card View</Button>\r\n                    </FlexboxGrid>\r\n                </FlexboxGrid.Item>\r\n            </FlexboxGrid>\r\n            <div className=\"card\">\r\n                <Table autoHeight affixHeader affixHorizontalScrollbar data={getData(users)}>\r\n                    <Table.Column width={240} align=\"start\" resizable>\r\n                        <Table.HeaderCell>Name</Table.HeaderCell>\r\n                        <Table.Cell dataKey=\"name\" />\r\n                    </Table.Column>\r\n\r\n                    <Table.Column width={120} align=\"start\" resizable>\r\n                        <Table.HeaderCell>Status</Table.HeaderCell>\r\n                        <StatusCell dataKey=\"busyStatus\"/>\r\n                    </Table.Column>\r\n\r\n                    <Table.Column width={240} align=\"start\" resizable>\r\n                        <Table.HeaderCell>Job Title</Table.HeaderCell>\r\n                        <Table.Cell dataKey=\"jobTitle\" />\r\n                    </Table.Column>\r\n\r\n                    <Table.Column width={360} align=\"start\" resizable>\r\n                        <Table.HeaderCell>Workload</Table.HeaderCell>\r\n                        <ProgressCell dataKey=\"workload\"/>\r\n                    </Table.Column>\r\n\r\n                    <Table.Column width={360} align=\"start\" resizable>\r\n                        <Table.HeaderCell>Current Task</Table.HeaderCell>\r\n                        <Table.Cell dataKey=\"currentTask\" />\r\n                    </Table.Column>\r\n\r\n\r\n                    <Table.Column width={480} align=\"start\" resizable>\r\n                        <Table.HeaderCell>Message</Table.HeaderCell>\r\n                        <Table.Cell dataKey=\"message\" />\r\n                    </Table.Column>\r\n                    \r\n                </Table>\r\n                <Table.Pagination\r\n                    activePage={page}\r\n                    displayLength={10}\r\n                    total={users.length}\r\n                    onChangePage={handleChangePage}\r\n                />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","D:\\Main school folder\\BA Project\\Code\\Widget-Builder-development\\client\\src\\shared\\components\\Header.js",[],"D:\\Main school folder\\BA Project\\Code\\Widget-Builder-development\\client\\src\\shared\\components\\SideNav.js",["55","56"],"import { Link, useHistory } from \"react-router-dom\";\r\nimport React, { useState, useEffect } from 'react'; \r\n\r\nimport './SideNav.scss';\r\nimport { Sidenav, Nav, Icon } from 'rsuite';\r\n\r\nconst SideNav = props => {\r\n    const [expanded, setExpanded] = useState(false);\r\n    const [menuWidth, setMenuWidth] = useState(56);\r\n    const [currentKey, setCurrentKey] = useState(\"1\");\r\n\r\n    const burgerClicked = () => {\r\n        setExpanded(!expanded);\r\n        if(expanded){\r\n            setMenuWidth(56);\r\n        }else{\r\n            setMenuWidth(250);\r\n        }\r\n    }\r\n\r\n    const history = useHistory();\r\n\r\n    const navItemSelected = (eventKey) => {\r\n        console.log(currentKey);\r\n        setCurrentKey(eventKey);\r\n        switch(eventKey) {\r\n            case \"1\":\r\n                history.push(\"/\");\r\n              break;\r\n            case \"2\":\r\n                history.push(\"/widget-builder\");\r\n              break;\r\n            case \"3\":\r\n                history.push(\"/co-workers\");\r\n              break;\r\n            case \"4\":\r\n                history.push(\"/departments\");\r\n              break;\r\n            case \"5\":\r\n                history.push(\"/settings\");\r\n              break;\r\n            default:\r\n              history.push(\"/\");\r\n          }\r\n        \r\n    }\r\n\r\n    let burgerOpen = <svg width=\"28\" height=\"28\" viewBox=\"0 0 32 32\">\r\n        <path id=\"Path_18\" data-name=\"Path 18\" d=\"M6,0H26a6,6,0,0,1,6,6V26a6,6,0,0,1-6,6H6a6,6,0,0,1-6-6V6A6,6,0,0,1,6,0Z\" fill=\"#37474f\"/>\r\n        <g id=\"Group_196\" data-name=\"Group 196\" transform=\"translate(-17.002 -8.5)\">\r\n        <path id=\"Path_34\" data-name=\"Path 34\" d=\"M0,0H12\" transform=\"translate(27.002 20.5)\" fill=\"none\" stroke=\"#fff\" stroke-linecap=\"round\" stroke-width=\"3\"/>\r\n        <path id=\"Path_33\" data-name=\"Path 33\" d=\"M0,0H12\" transform=\"translate(27.002 28.5)\" fill=\"none\" stroke=\"#fff\" stroke-linecap=\"round\" stroke-width=\"3\"/>\r\n        </g>\r\n    </svg>\r\n  \r\n    let burgerClose = <svg width=\"28\" height=\"28\" viewBox=\"0 0 32 32\">\r\n        <g id=\"Group_442\" transform=\"translate(-19 -13)\">\r\n        <path id=\"Path_18\" d=\"M6,0H26a6,6,0,0,1,6,6V26a6,6,0,0,1-6,6H6a6,6,0,0,1-6-6V6A6,6,0,0,1,6,0Z\" transform=\"translate(19 13)\" fill=\"#354e56\"/>\r\n        <g id=\"Group_196\" transform=\"translate(1.998 3.5)\">\r\n            <line id=\"Line_14\" y1=\"5\" x2=\"5\" transform=\"translate(30.002 20.5)\" fill=\"none\" stroke=\"#fff\" strokeLinecap=\"round\" strokeWidth=\"3\"/>\r\n            <line id=\"Line_15\" x2=\"5\" y2=\"5\" transform=\"translate(30.002 25.5)\" fill=\"none\" stroke=\"#fff\" strokeLinecap=\"round\" strokeWidth=\"3\"/>\r\n        </g>\r\n        </g>\r\n    </svg>\r\n    \r\n    return (\r\n        <div className=\"sidenav-container\" style={{ width: menuWidth }}>\r\n            <div className=\"burger-icon\" onClick={burgerClicked}>{ expanded ? burgerClose : burgerOpen }</div>\r\n            <Sidenav \r\n                activeKey={currentKey}\r\n                expanded={expanded}\r\n                onSelect={navItemSelected}>\r\n                <Sidenav.Body>\r\n                    <Nav>\r\n                        <Nav.Item eventKey=\"1\" icon={<Icon icon=\"th-large\" />}>\r\n                            <p>Dashboard</p>\r\n                        </Nav.Item>\r\n                        <Nav.Item eventKey=\"2\" icon={<Icon icon=\"data-increase\"/>}>\r\n                            Widget Builder\r\n                        </Nav.Item>\r\n                        <Nav.Item eventKey=\"3\" icon={<Icon icon=\"user\" />}>\r\n                           Co-Workers\r\n                        </Nav.Item>\r\n                        <Nav.Item eventKey=\"4\" icon={<Icon icon=\"group\" />}>\r\n                            Departments\r\n                        </Nav.Item>\r\n                        <Nav.Item eventKey=\"5\" icon={<Icon icon=\"gear-circle\" />}>\r\n                            Settings\r\n                        </Nav.Item>\r\n                    </Nav>\r\n                </Sidenav.Body>\r\n            </Sidenav>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SideNav;",{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","severity":1,"message":"62","line":2,"column":40,"nodeType":"63","messageId":"64","endLine":2,"endColumn":43},{"ruleId":"61","severity":1,"message":"65","line":48,"column":12,"nodeType":"63","messageId":"64","endLine":48,"endColumn":19},{"ruleId":"61","severity":1,"message":"66","line":48,"column":21,"nodeType":"63","messageId":"64","endLine":48,"endColumn":31},{"ruleId":"61","severity":1,"message":"67","line":50,"column":25,"nodeType":"63","messageId":"64","endLine":50,"endColumn":39},{"ruleId":"61","severity":1,"message":"65","line":46,"column":12,"nodeType":"63","messageId":"64","endLine":46,"endColumn":19},{"ruleId":"61","severity":1,"message":"66","line":46,"column":21,"nodeType":"63","messageId":"64","endLine":46,"endColumn":31},{"ruleId":"61","severity":1,"message":"68","line":48,"column":19,"nodeType":"63","messageId":"64","endLine":48,"endColumn":26},{"ruleId":"61","severity":1,"message":"69","line":1,"column":10,"nodeType":"63","messageId":"64","endLine":1,"endColumn":14},{"ruleId":"61","severity":1,"message":"70","line":2,"column":27,"nodeType":"63","messageId":"64","endLine":2,"endColumn":36},"no-native-reassign",["71"],"no-negated-in-lhs",["72"],"no-unused-vars","'Tag' is defined but never used.","Identifier","unusedVar","'loading' is assigned a value but never used.","'setLoading' is assigned a value but never used.","'setDepartments' is assigned a value but never used.","'setUser' is assigned a value but never used.","'Link' is defined but never used.","'useEffect' is defined but never used.","no-global-assign","no-unsafe-negation"]